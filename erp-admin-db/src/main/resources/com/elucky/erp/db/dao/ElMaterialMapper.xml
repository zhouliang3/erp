<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elucky.erp.db.dao.ElMaterialMapper">
  <resultMap id="BaseResultMap" type="com.elucky.erp.db.domain.ElMaterial">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="auxiliary_unit" jdbcType="VARCHAR" property="auxiliaryUnit" />
    <result column="material_type" jdbcType="VARCHAR" property="materialType" />
    <result column="default_supplier_id" jdbcType="BIGINT" property="defaultSupplierId" />
    <result column="bar_code" jdbcType="VARCHAR" property="barCode" />
    <result column="quantity" jdbcType="DOUBLE" property="quantity" />
    <result column="market_ref_price" jdbcType="DOUBLE" property="marketRefPrice" />
    <result column="specs" jdbcType="VARCHAR" property="specs" />
    <result column="max_quantity" jdbcType="DOUBLE" property="maxQuantity" />
    <result column="min_quantity" jdbcType="DOUBLE" property="minQuantity" />
    <result column="gallery" jdbcType="VARCHAR" property="gallery" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_With_Version_Where_Clause">
    <where >
      version = #{version,jdbcType=INTEGER}
      <if test="example.oredCriteria.size() > 0">
        <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
    </where >
  </sql>
  <sql id="Base_Column_List">
    id, material_code, material_name, unit, auxiliary_unit, material_type, default_supplier_id, 
    bar_code, quantity, market_ref_price, specs, max_quantity, min_quantity, gallery, 
    create_user, create_time, update_user, update_time, is_deleted, version
  </sql>
  <select id="selectByExample" parameterType="com.elucky.erp.db.domain.ElMaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from el_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, material_code, material_name, unit, auxiliary_unit, material_type, default_supplier_id, 
          bar_code, quantity, market_ref_price, specs, max_quantity, min_quantity, gallery, 
          create_user, create_time, update_user, update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_material
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from el_material
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from el_material
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = 
    <choose>
      <when test="andLogicalDeleted">
        '1'
      </when>
      <otherwise>
        '0'
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, material_code, material_name, unit, auxiliary_unit, material_type, default_supplier_id, 
          bar_code, quantity, market_ref_price, specs, max_quantity, min_quantity, gallery, 
          create_user, create_time, update_user, update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_material
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from el_material
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.elucky.erp.db.domain.ElMaterialExample">
    delete from el_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elucky.erp.db.domain.ElMaterial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into el_material (material_code, material_name, unit, 
      auxiliary_unit, material_type, default_supplier_id, 
      bar_code, quantity, market_ref_price, 
      specs, max_quantity, min_quantity, 
      gallery, create_user, create_time, 
      update_user, update_time, is_deleted, 
      version)
    values (#{materialCode,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{auxiliaryUnit,jdbcType=VARCHAR}, #{materialType,jdbcType=VARCHAR}, #{defaultSupplierId,jdbcType=BIGINT}, 
      #{barCode,jdbcType=VARCHAR}, #{quantity,jdbcType=DOUBLE}, #{marketRefPrice,jdbcType=DOUBLE}, 
      #{specs,jdbcType=VARCHAR}, #{maxQuantity,jdbcType=DOUBLE}, #{minQuantity,jdbcType=DOUBLE}, 
      #{gallery,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.elucky.erp.db.domain.ElMaterial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into el_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="materialCode != null">
        material_code,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="auxiliaryUnit != null">
        auxiliary_unit,
      </if>
      <if test="materialType != null">
        material_type,
      </if>
      <if test="defaultSupplierId != null">
        default_supplier_id,
      </if>
      <if test="barCode != null">
        bar_code,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="marketRefPrice != null">
        market_ref_price,
      </if>
      <if test="specs != null">
        specs,
      </if>
      <if test="maxQuantity != null">
        max_quantity,
      </if>
      <if test="minQuantity != null">
        min_quantity,
      </if>
      <if test="gallery != null">
        gallery,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="auxiliaryUnit != null">
        #{auxiliaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="defaultSupplierId != null">
        #{defaultSupplierId,jdbcType=BIGINT},
      </if>
      <if test="barCode != null">
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="marketRefPrice != null">
        #{marketRefPrice,jdbcType=DOUBLE},
      </if>
      <if test="specs != null">
        #{specs,jdbcType=VARCHAR},
      </if>
      <if test="maxQuantity != null">
        #{maxQuantity,jdbcType=DOUBLE},
      </if>
      <if test="minQuantity != null">
        #{minQuantity,jdbcType=DOUBLE},
      </if>
      <if test="gallery != null">
        #{gallery,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elucky.erp.db.domain.ElMaterialExample" resultType="java.lang.Long">
    select count(*) from el_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update el_material
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.materialCode != null">
        material_code = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null">
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.auxiliaryUnit != null">
        auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.materialType != null">
        material_type = #{record.materialType,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultSupplierId != null">
        default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT},
      </if>
      <if test="record.barCode != null">
        bar_code = #{record.barCode,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=DOUBLE},
      </if>
      <if test="record.marketRefPrice != null">
        market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.specs != null">
        specs = #{record.specs,jdbcType=VARCHAR},
      </if>
      <if test="record.maxQuantity != null">
        max_quantity = #{record.maxQuantity,jdbcType=DOUBLE},
      </if>
      <if test="record.minQuantity != null">
        min_quantity = #{record.minQuantity,jdbcType=DOUBLE},
      </if>
      <if test="record.gallery != null">
        gallery = #{record.gallery,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update el_material
    set id = #{record.id,jdbcType=BIGINT},
      material_code = #{record.materialCode,jdbcType=VARCHAR},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=VARCHAR},
      default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT},
      bar_code = #{record.barCode,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=DOUBLE},
      market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE},
      specs = #{record.specs,jdbcType=VARCHAR},
      max_quantity = #{record.maxQuantity,jdbcType=DOUBLE},
      min_quantity = #{record.minQuantity,jdbcType=DOUBLE},
      gallery = #{record.gallery,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elucky.erp.db.domain.ElMaterial">
    update el_material
    <set>
      <if test="materialCode != null">
        material_code = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="auxiliaryUnit != null">
        auxiliary_unit = #{auxiliaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        material_type = #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="defaultSupplierId != null">
        default_supplier_id = #{defaultSupplierId,jdbcType=BIGINT},
      </if>
      <if test="barCode != null">
        bar_code = #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="marketRefPrice != null">
        market_ref_price = #{marketRefPrice,jdbcType=DOUBLE},
      </if>
      <if test="specs != null">
        specs = #{specs,jdbcType=VARCHAR},
      </if>
      <if test="maxQuantity != null">
        max_quantity = #{maxQuantity,jdbcType=DOUBLE},
      </if>
      <if test="minQuantity != null">
        min_quantity = #{minQuantity,jdbcType=DOUBLE},
      </if>
      <if test="gallery != null">
        gallery = #{gallery,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elucky.erp.db.domain.ElMaterial">
    update el_material
    set material_code = #{materialCode,jdbcType=VARCHAR},
      material_name = #{materialName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      auxiliary_unit = #{auxiliaryUnit,jdbcType=VARCHAR},
      material_type = #{materialType,jdbcType=VARCHAR},
      default_supplier_id = #{defaultSupplierId,jdbcType=BIGINT},
      bar_code = #{barCode,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=DOUBLE},
      market_ref_price = #{marketRefPrice,jdbcType=DOUBLE},
      specs = #{specs,jdbcType=VARCHAR},
      max_quantity = #{maxQuantity,jdbcType=DOUBLE},
      min_quantity = #{minQuantity,jdbcType=DOUBLE},
      gallery = #{gallery,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.elucky.erp.db.domain.ElMaterialExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from el_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, material_code, material_name, unit, auxiliary_unit, material_type, default_supplier_id, 
          bar_code, quantity, market_ref_price, specs, max_quantity, min_quantity, gallery, 
          create_user, create_time, update_user, update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_material
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    update el_material set is_deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
    update el_material set is_deleted = 1
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteWithVersionByPrimaryKey" parameterType="map">
    delete from el_material
    where version = #{version,jdbcType=INTEGER}
      and id = #{key,jdbcType=BIGINT}
  </delete>
  <delete id="deleteWithVersionByExample" parameterType="map">
    delete from el_material
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </delete>
  <update id="updateWithVersionByExample" parameterType="map">
    update el_material
    set version = version + 1,
    id = #{record.id,jdbcType=BIGINT}, 
    material_code = #{record.materialCode,jdbcType=VARCHAR}, 
    material_name = #{record.materialName,jdbcType=VARCHAR}, 
    unit = #{record.unit,jdbcType=VARCHAR}, 
    auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR}, 
    material_type = #{record.materialType,jdbcType=VARCHAR}, 
    default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT}, 
    bar_code = #{record.barCode,jdbcType=VARCHAR}, 
    quantity = #{record.quantity,jdbcType=DOUBLE}, 
    market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE}, 
    specs = #{record.specs,jdbcType=VARCHAR}, 
    max_quantity = #{record.maxQuantity,jdbcType=DOUBLE}, 
    min_quantity = #{record.minQuantity,jdbcType=DOUBLE}, 
    gallery = #{record.gallery,jdbcType=VARCHAR}, 
    create_user = #{record.createUser,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_user = #{record.updateUser,jdbcType=VARCHAR}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}, 
    is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByExampleSelective" parameterType="map">
    update el_material
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.id != null">
          id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.materialCode != null">
          material_code = #{record.materialCode,jdbcType=VARCHAR},
        </if>
        <if test="record.materialName != null">
          material_name = #{record.materialName,jdbcType=VARCHAR},
        </if>
        <if test="record.unit != null">
          unit = #{record.unit,jdbcType=VARCHAR},
        </if>
        <if test="record.auxiliaryUnit != null">
          auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR},
        </if>
        <if test="record.materialType != null">
          material_type = #{record.materialType,jdbcType=VARCHAR},
        </if>
        <if test="record.defaultSupplierId != null">
          default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT},
        </if>
        <if test="record.barCode != null">
          bar_code = #{record.barCode,jdbcType=VARCHAR},
        </if>
        <if test="record.quantity != null">
          quantity = #{record.quantity,jdbcType=DOUBLE},
        </if>
        <if test="record.marketRefPrice != null">
          market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE},
        </if>
        <if test="record.specs != null">
          specs = #{record.specs,jdbcType=VARCHAR},
        </if>
        <if test="record.maxQuantity != null">
          max_quantity = #{record.maxQuantity,jdbcType=DOUBLE},
        </if>
        <if test="record.minQuantity != null">
          min_quantity = #{record.minQuantity,jdbcType=DOUBLE},
        </if>
        <if test="record.gallery != null">
          gallery = #{record.gallery,jdbcType=VARCHAR},
        </if>
        <if test="record.createUser != null">
          create_user = #{record.createUser,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateUser != null">
          update_user = #{record.updateUser,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.isDeleted != null">
          is_deleted = #{record.isDeleted,jdbcType=BIT},
        </if>
      </trim>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByPrimaryKey" parameterType="map">
    update el_material
    set version = version + 1,
    material_code = #{record.materialCode,jdbcType=VARCHAR}, 
    material_name = #{record.materialName,jdbcType=VARCHAR}, 
    unit = #{record.unit,jdbcType=VARCHAR}, 
    auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR}, 
    material_type = #{record.materialType,jdbcType=VARCHAR}, 
    default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT}, 
    bar_code = #{record.barCode,jdbcType=VARCHAR}, 
    quantity = #{record.quantity,jdbcType=DOUBLE}, 
    market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE}, 
    specs = #{record.specs,jdbcType=VARCHAR}, 
    max_quantity = #{record.maxQuantity,jdbcType=DOUBLE}, 
    min_quantity = #{record.minQuantity,jdbcType=DOUBLE}, 
    gallery = #{record.gallery,jdbcType=VARCHAR}, 
    create_user = #{record.createUser,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_user = #{record.updateUser,jdbcType=VARCHAR}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}, 
    is_deleted = #{record.isDeleted,jdbcType=BIT}
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateWithVersionByPrimaryKeySelective" parameterType="map">
    update el_material
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.materialCode != null">
          material_code = #{record.materialCode,jdbcType=VARCHAR},
        </if>
        <if test="record.materialName != null">
          material_name = #{record.materialName,jdbcType=VARCHAR},
        </if>
        <if test="record.unit != null">
          unit = #{record.unit,jdbcType=VARCHAR},
        </if>
        <if test="record.auxiliaryUnit != null">
          auxiliary_unit = #{record.auxiliaryUnit,jdbcType=VARCHAR},
        </if>
        <if test="record.materialType != null">
          material_type = #{record.materialType,jdbcType=VARCHAR},
        </if>
        <if test="record.defaultSupplierId != null">
          default_supplier_id = #{record.defaultSupplierId,jdbcType=BIGINT},
        </if>
        <if test="record.barCode != null">
          bar_code = #{record.barCode,jdbcType=VARCHAR},
        </if>
        <if test="record.quantity != null">
          quantity = #{record.quantity,jdbcType=DOUBLE},
        </if>
        <if test="record.marketRefPrice != null">
          market_ref_price = #{record.marketRefPrice,jdbcType=DOUBLE},
        </if>
        <if test="record.specs != null">
          specs = #{record.specs,jdbcType=VARCHAR},
        </if>
        <if test="record.maxQuantity != null">
          max_quantity = #{record.maxQuantity,jdbcType=DOUBLE},
        </if>
        <if test="record.minQuantity != null">
          min_quantity = #{record.minQuantity,jdbcType=DOUBLE},
        </if>
        <if test="record.gallery != null">
          gallery = #{record.gallery,jdbcType=VARCHAR},
        </if>
        <if test="record.createUser != null">
          create_user = #{record.createUser,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateUser != null">
          update_user = #{record.updateUser,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.isDeleted != null">
          is_deleted = #{record.isDeleted,jdbcType=BIT},
        </if>
      </trim>
    </set>
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>


  <select id="selectByParam" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from el_material a
    where is_deleted=0 and (a.material_code like #{p,jdbcType=VARCHAR} or a.material_name like #{p,jdbcType=VARCHAR}
    or a.bar_code like #{p,jdbcType=VARCHAR} or a.specs like #{p,jdbcType=VARCHAR})
    <if test="materialType != null and materialType.size()>0">
      and material_type in
      <foreach close=")" collection="materialType" item="listItem" open="(" separator=",">
        #{listItem}
      </foreach>
    </if>
  </select>
  <select id="countByParam" resultType="java.lang.Long">
    SELECT count(1)
    FROM el_material a
    where is_deleted=0 and (a.material_code like #{p,jdbcType=VARCHAR} or a.material_name like #{p,jdbcType=VARCHAR}
    or a.bar_code like #{p,jdbcType=VARCHAR} or a.specs like #{p,jdbcType=VARCHAR})
    <if test="materialType != null and materialType.size()>0">
      and material_type in
      <foreach close=")" collection="materialType" item="listItem" open="(" separator=",">
        #{listItem}
      </foreach>
    </if>
  </select>
</mapper>