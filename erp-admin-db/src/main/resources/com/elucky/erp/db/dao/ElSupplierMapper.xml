<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elucky.erp.db.dao.ElSupplierMapper">
  <resultMap id="BaseResultMap" type="com.elucky.erp.db.domain.ElSupplier">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_With_Version_Where_Clause">
    <where >
      version = #{version,jdbcType=INTEGER}
      <if test="example.oredCriteria.size() > 0">
        <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
    </where >
  </sql>
  <sql id="Base_Column_List">
    id, supplier_name, contact, tel, fax, email, address, create_user, create_time, update_user, 
    update_time, is_deleted, version
  </sql>
  <select id="selectByExample" parameterType="com.elucky.erp.db.domain.ElSupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from el_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, supplier_name, contact, tel, fax, email, address, create_user, create_time, update_user, 
          update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_supplier
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from el_supplier
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from el_supplier
    where id = #{id,jdbcType=BIGINT}
      and is_deleted = 
    <choose>
      <when test="andLogicalDeleted">
        '1'
      </when>
      <otherwise>
        '0'
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, supplier_name, contact, tel, fax, email, address, create_user, create_time, update_user, 
          update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_supplier
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from el_supplier
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.elucky.erp.db.domain.ElSupplierExample">
    delete from el_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elucky.erp.db.domain.ElSupplier">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into el_supplier (supplier_name, contact, tel, 
      fax, email, address, 
      create_user, create_time, update_user, 
      update_time, is_deleted, version
      )
    values (#{supplierName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.elucky.erp.db.domain.ElSupplier">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into el_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elucky.erp.db.domain.ElSupplierExample" resultType="java.lang.Long">
    select count(*) from el_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update el_supplier
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null">
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update el_supplier
    set id = #{record.id,jdbcType=BIGINT},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elucky.erp.db.domain.ElSupplier">
    update el_supplier
    <set>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elucky.erp.db.domain.ElSupplier">
    update el_supplier
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.elucky.erp.db.domain.ElSupplierExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from el_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, supplier_name, contact, tel, fax, email, address, create_user, create_time, update_user, 
          update_time, is_deleted, version
      </otherwise>
    </choose>
    from el_supplier
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    update el_supplier set is_deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
    update el_supplier set is_deleted = 1
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteWithVersionByPrimaryKey" parameterType="map">
    delete from el_supplier
    where version = #{version,jdbcType=INTEGER}
      and id = #{key,jdbcType=BIGINT}
  </delete>
  <delete id="deleteWithVersionByExample" parameterType="map">
    delete from el_supplier
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </delete>
  <update id="updateWithVersionByExample" parameterType="map">
    update el_supplier
    set version = version + 1,
    id = #{record.id,jdbcType=BIGINT}, 
    supplier_name = #{record.supplierName,jdbcType=VARCHAR}, 
    contact = #{record.contact,jdbcType=VARCHAR}, 
    tel = #{record.tel,jdbcType=VARCHAR}, 
    fax = #{record.fax,jdbcType=VARCHAR}, 
    email = #{record.email,jdbcType=VARCHAR}, 
    address = #{record.address,jdbcType=VARCHAR}, 
    create_user = #{record.createUser,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_user = #{record.updateUser,jdbcType=VARCHAR}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}, 
    is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByExampleSelective" parameterType="map">
    update el_supplier
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.id != null">
          id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.supplierName != null">
          supplier_name = #{record.supplierName,jdbcType=VARCHAR},
        </if>
        <if test="record.contact != null">
          contact = #{record.contact,jdbcType=VARCHAR},
        </if>
        <if test="record.tel != null">
          tel = #{record.tel,jdbcType=VARCHAR},
        </if>
        <if test="record.fax != null">
          fax = #{record.fax,jdbcType=VARCHAR},
        </if>
        <if test="record.email != null">
          email = #{record.email,jdbcType=VARCHAR},
        </if>
        <if test="record.address != null">
          address = #{record.address,jdbcType=VARCHAR},
        </if>
        <if test="record.createUser != null">
          create_user = #{record.createUser,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateUser != null">
          update_user = #{record.updateUser,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.isDeleted != null">
          is_deleted = #{record.isDeleted,jdbcType=BIT},
        </if>
      </trim>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByPrimaryKey" parameterType="map">
    update el_supplier
    set version = version + 1,
    supplier_name = #{record.supplierName,jdbcType=VARCHAR}, 
    contact = #{record.contact,jdbcType=VARCHAR}, 
    tel = #{record.tel,jdbcType=VARCHAR}, 
    fax = #{record.fax,jdbcType=VARCHAR}, 
    email = #{record.email,jdbcType=VARCHAR}, 
    address = #{record.address,jdbcType=VARCHAR}, 
    create_user = #{record.createUser,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_user = #{record.updateUser,jdbcType=VARCHAR}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}, 
    is_deleted = #{record.isDeleted,jdbcType=BIT}
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateWithVersionByPrimaryKeySelective" parameterType="map">
    update el_supplier
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.supplierName != null">
          supplier_name = #{record.supplierName,jdbcType=VARCHAR},
        </if>
        <if test="record.contact != null">
          contact = #{record.contact,jdbcType=VARCHAR},
        </if>
        <if test="record.tel != null">
          tel = #{record.tel,jdbcType=VARCHAR},
        </if>
        <if test="record.fax != null">
          fax = #{record.fax,jdbcType=VARCHAR},
        </if>
        <if test="record.email != null">
          email = #{record.email,jdbcType=VARCHAR},
        </if>
        <if test="record.address != null">
          address = #{record.address,jdbcType=VARCHAR},
        </if>
        <if test="record.createUser != null">
          create_user = #{record.createUser,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateUser != null">
          update_user = #{record.updateUser,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.isDeleted != null">
          is_deleted = #{record.isDeleted,jdbcType=BIT},
        </if>
      </trim>
    </set>
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
</mapper>